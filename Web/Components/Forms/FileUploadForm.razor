@using Core.Model
@inject ISnackbar Snackbar
@namespace Web.Components.Forms


<MudStack Style="width: 80%" Justify="Justify.Center" AlignItems="AlignItems.Center" >
    <MudFileUpload Style="width: 100%; height: 100%" T="IReadOnlyList<IBrowserFile>"
                   @ref="@_fileUpload"
                   OnFilesChanged="OnInputFileChanged"
                   AppendMultipleFiles
                   Hidden="@false"
                   InputClass="absolute overflow-hidden z-10"
                   InputStyle="opacity:0;"
                   Accept=".pdf, .csv"
                   tabindex="-1"
                   @ondrop="@ClearDragClass"
                   @ondragenter="@SetDragClass"
                   @ondragleave="@ClearDragClass"
                   @ondragend="@ClearDragClass">
        <ActivatorContent>
            <MudPaper 
                      Outlined="true"
                      Class="@_dragClass"
                      Height="30vh"
                      Style="justify-items:center; align-items: center; display: grid">
                <MudText Typo="Typo.h6">
                    Drag your grades here or click to upload manually
                </MudText>
            </MudPaper>
        </ActivatorContent>
    </MudFileUpload>
</MudStack>
@code {
#nullable enable
    private const string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 ";
    private string _dragClass = DefaultDragClass;
    private MudFileUpload<IReadOnlyList<IBrowserFile>>? _fileUpload;

    [Parameter]
    public EventCallback<IBrowserFile> BrowserFile { get; set; }
    
    protected override void OnInitialized()
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopRight;
    }
    
    private async Task OnInputFileChanged(InputFileChangeEventArgs e)
    {
        try
        {
            ClearDragClass();
            await BrowserFile.InvokeAsync(e.File);
            Snackbar.Add("Grades processed", Severity.Success);
        }
        catch (Exception ex)
        {
            Snackbar.Add("Error while processing grades " + ex.Message, Severity.Error);
            throw;
        }
    }

    private void SetDragClass()
        => _dragClass = $"{DefaultDragClass} mud-border-primary";

    private void ClearDragClass()
        => _dragClass = DefaultDragClass;
}